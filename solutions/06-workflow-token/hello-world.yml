name: Hallo Welt mit Workflow-Token

run-name: '${{ (github.event.issue && format(''Issue #{0}'', github.event.issue.number)) || (github.event.schedule && ''Cron'') || github.actor }} hat diesen Workflow ausgel√∂st'

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Ihr Name f√ºr personalisierte Begr√º√üung'
        required: false
        default: 'World'
        type: string
      greeting:
        description: 'Benutzerdefinierte Begr√º√üungsnachricht'
        required: false
        default: 'Hello'
        type: string
  issues:
    types: [opened]
  schedule:
    - cron: '0 9 * * *'  # T√§glich um 9:00 Uhr UTC

permissions:
  contents: read
  actions: read
  issues: write

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub CLI-Authentifizierung pr√ºfen
        run: |
          echo "GitHub CLI-Authentifizierung wird gepr√ºft..."
          gh auth status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Personalisierte Begr√º√üung ausgeben
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "$GREETING $NAME!"
          echo "Ausgel√∂st von: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Referenz: $REF"
          echo ""
        env:
          NAME: ${{ github.event.inputs.name }}
          GREETING: ${{ github.event.inputs.greeting }}
          REF: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Repository-Informationen abrufen
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Repository-Informationen:"
          gh repo view ${{ github.repository }} --json name,owner,description,isPrivate,defaultBranchRef | jq -r '
            "Name: " + .name,
            "Owner: " + .owner.login,  
            "Beschreibung: " + (if .description != "" then .description else "Keine Beschreibung" end),
            "Privat: " + (.isPrivate | tostring),
            "Standard-Branch: " + .defaultBranchRef.name
          '
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Issue-Informationen ausgeben
        if: github.event_name == 'issues'
        run: |
          echo "Neues Issue ge√∂ffnet!"
          echo "Issue #${{ github.event.issue.number }}: $ISSUE_TITLE"
          echo "Inhalt: $ISSUE_BODY"
          echo "Er√∂ffnet von: ${{ github.event.issue.user.login }}"
          echo "Issue-URL: ${{ github.event.issue.html_url }}"
          echo ""
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Kommentar zum Issue hinzuf√ºgen
        if: github.event_name == 'issues'
        run: |
          gh issue comment ${{ github.event.issue.number }} -R ${{ github.repository }} --body "üëã Hallo! Dieses Issue wurde automatisch von unserem Workflow erkannt. Wir werden es in K√ºrze pr√ºfen.

          **Issue-Details:**
          - **Titel:** ${{ github.event.issue.title }}
          - **Er√∂ffnet von:** ${{ github.event.issue.user.login }}
          - **Workflow-Lauf:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          Vielen Dank f√ºr das Melden dieses Issues!"
          
          echo "‚úì Kommentar zu Issue #${{ github.event.issue.number }} hinzugef√ºgt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: T√§glichen Status-Check ausgeben
        if: github.event_name == 'schedule'
        run: |
          echo "T√§glicher Status-Check ‚Äì Alle Systeme betriebsbereit"
          echo "Aktuelle Zeit: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          echo ""
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Letzte Workflow-L√§ufe auflisten
        if: github.event_name == 'schedule'
        run: |
          echo "Letzte Workflow-L√§ufe:"
          gh run list -R ${{ github.repository }} --limit 5 --json displayTitle,status,conclusion,headBranch | jq -r '.[] | 
            (if .conclusion == "success" then "‚úì" 
             elif .conclusion == "failure" then "‚úó" 
             elif .status == "in_progress" then "‚è≥" 
             else "‚óã" end) + " " + .displayTitle + " - " + .headBranch + " (" + (.conclusion // .status) + ")"'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
