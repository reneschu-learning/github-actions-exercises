name: Reusable Deployment (with Composite Action)

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Target environment for deployment'
      package-name:
        required: true
        type: string
        description: 'Name of the deployment package artifact'
      app-url:
        required: true
        type: string
        description: 'URL where the application will be deployed'
      is-production:
        required: false
        type: boolean
        default: false
        description: 'Whether this is a production deployment'
    outputs:
      deployment-status:
        description: 'Status of the deployment (success/failure)'
        value: ${{ jobs.deploy.outputs.status }}

jobs:
  deploy:
    name: 🚀 Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
      url: ${{ inputs.app-url }}
    outputs:
      status: ${{ steps.deploy.outputs.status }}
    
    steps:
      - name: 📥 Checkout Repository (for composite action)
        if: inputs.is-production
        uses: actions/checkout@v4
      
      - name: 📥 Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.package-name }}
          path: ./deployment
      
      - name: 🔍 Verify package contents
        run: |
          echo "📋 Deployment Package Contents:"
          ls -la ./deployment/
          echo ""
          echo "📄 Build Information:"
          cat ./deployment/build-info.txt
      
      - name: 🔧 Setup .NET (Production only)
        if: inputs.is-production
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: 🚀 Deploy to ${{ inputs.environment }}
        id: deploy
        run: |
          echo "🌍 Deploying to ${{ inputs.environment }} Environment"
          echo "Package location: ./deployment/"
          echo "Target URL: ${{ inputs.app-url }}"
          
          # Run production-specific deployment steps
          if [ "${{ inputs.is-production }}" == "true" ]; then
            # Simulate deployment by running the application
            echo "🚀 Running the application..."
            chmod +x ./deployment/SampleApp
            ./deployment/SampleApp
          fi
          
          echo "status=success" >> $GITHUB_OUTPUT
          echo "✅ Deployment completed successfully"
      
      - name: 🏷️ Create Release Tag (Production only)
        id: create-tag
        if: inputs.is-production
        uses: ./.github/actions/create-release-tag
        with:
          tag-name: 'v1.0.${{ github.run_number }}'
          commit-sha: ${{ github.sha }}
          tag-message: 'Tag created by deployment'
          github-token: ${{ github.token }}
      
      - name: 🔗 Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Environment | ${{ inputs.environment }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Commit | ${{ github.sha }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Branch | ${{ github.ref_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Actor | ${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Target URL | ${{ inputs.app-url }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Status | ✅ Success |" >> $GITHUB_STEP_SUMMARY
